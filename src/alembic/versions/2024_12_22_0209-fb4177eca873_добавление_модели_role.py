"""добавление модели role

Revision ID: fb4177eca873
Revises: 72b83c97a82b
Create Date: 2024-12-22 02:09:07.584033

"""
from datetime import datetime, timezone
import uuid
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy import table, column, String, Boolean, TIMESTAMP
from sqlalchemy.dialects.postgresql import UUID

# revision identifiers, used by Alembic.
revision: str = "fb4177eca873"
down_revision: Union[str, None] = "72b83c97a82b"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "roles",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("system_role", sa.Boolean(), nullable=True),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_roles")),
        sa.UniqueConstraint("id", name=op.f("uq_roles_id")),
        sa.UniqueConstraint("title", name=op.f("uq_roles_title")),
    )
    op.add_column(
        "login_history", sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False)
    )
    op.create_unique_constraint(op.f("uq_login_history_id"), "login_history", ["id"])
    op.add_column("users", sa.Column("role_id", sa.UUID(), nullable=True))
    op.create_foreign_key(op.f("fk_users_role_id_roles"), "users", "roles", ["role_id"], ["id"])
    roles_table = table(
        "roles",
        column("id", UUID),
        column("title", String),
        column("system_role", Boolean),
        column("created_at", TIMESTAMP(timezone=True)),
    )
    op.bulk_insert(roles_table, [
        {"id": str(uuid.uuid4()), "title": "subscriber", "system_role": False, "created_at": datetime.now(timezone.utc)},
        {"id": str(uuid.uuid4()), "title": "superuser", "system_role": True, "created_at": datetime.now(timezone.utc)},
        {"id": str(uuid.uuid4()), "title": "admin", "system_role": True, "created_at": datetime.now(timezone.utc)},
    ])


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f("fk_users_role_id_roles"), "users", type_="foreignkey")
    op.drop_column("users", "role_id")
    op.drop_constraint(op.f("uq_login_history_id"), "login_history", type_="unique")
    op.drop_column("login_history", "created_at")
    op.drop_table("roles")
    # ### end Alembic commands ###
